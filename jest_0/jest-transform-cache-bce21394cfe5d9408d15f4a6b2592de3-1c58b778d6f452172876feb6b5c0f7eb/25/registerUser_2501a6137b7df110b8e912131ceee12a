'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.registerUser = undefined;var _config = require('../config');var _config2 = _interopRequireDefault(_config);
var _auth = require('./auth');
var _reduxForm = require('redux-form');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

const registerUser = exports.registerUser = user => dispatch => {
    return fetch(`${_config2.default}/users`, {
        method: 'POST',
        headers: {
            'content-type': 'application/json' },

        body: JSON.stringify(user) }).

    then(response => {
        if (response.status === 401) {
            return response.json().then(err => Promise.reject(err));
        }
        return response.json();
    }).
    then(response => {
        dispatch((0, _auth.signedUp)());
    }).
    catch(err => {let
        message = err.message;const
        reason = err.error.reason;

        dispatch((0, _auth.authError)(err));

        if (reason !== 'ValidationError') {
            message = 'Unable to sign up, please try again later';
        }

        dispatch((0, _auth.authError)(message));
        if (reason === 'ValidationError') {
            return Promise.reject(
            new _reduxForm.SubmissionError({
                _error: message }));


        }
    });
};
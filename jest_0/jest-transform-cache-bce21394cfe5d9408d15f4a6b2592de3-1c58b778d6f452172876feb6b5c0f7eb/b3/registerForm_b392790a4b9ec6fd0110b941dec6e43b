'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.RegisterForm = undefined;var _jsxFileName = '/home/isael/Desktop/lol-improver/lol-improver-client/src/components/RegisterForm/registerForm.js';var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _reduxForm = require('redux-form');
var _registerUser = require('../../actions/registerUser');
var _Input = require('../Input');var _Input2 = _interopRequireDefault(_Input);
var _validators = require('../../validators');
var _reactRouterDom = require('react-router-dom');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class RegisterForm extends _react2.default.Component {
    onSubmit(values) {
        // console.log(JSON.stringify(values.username))
        let user = {
            username: values.username,
            password: values.password };

        return this.props.dispatch(
        (0, _registerUser.registerUser)(user));
    }

    render() {
        // console.log(this.props.meta)
        let error;
        if (this.props.error) {
            error =
            _react2.default.createElement('label', { className: 'validation-error', __source: { fileName: _jsxFileName, lineNumber: 24 }, __self: this },
                this.props.error);


        }
        return (
            _react2.default.createElement('form', {
                    id: 'register-form',
                    onSubmit: this.props.handleSubmit(values => this.onSubmit(values)), __source: { fileName: _jsxFileName, lineNumber: 30 }, __self: this },

                _react2.default.createElement('h2', { className: 'form-title', __source: { fileName: _jsxFileName, lineNumber: 34 }, __self: this }, 'Sign Up'),
                error,
                _react2.default.createElement(_reduxForm.Field, {
                    component: _Input2.default,
                    type: 'text',
                    name: 'username',
                    id: 'username',
                    label: 'Username',
                    validate: [_validators.required, _validators.notEmpty, _validators.spacesInUsername], __source: { fileName: _jsxFileName, lineNumber: 36 }, __self: this }),

                _react2.default.createElement(_reduxForm.Field, {
                    component: _Input2.default,
                    type: 'password',
                    name: 'password',
                    id: 'password',
                    label: 'Password',
                    validate: [_validators.required, _validators.notEmpty, _validators.tooBigOrTooSmall], __source: { fileName: _jsxFileName, lineNumber: 44 }, __self: this }),

                _react2.default.createElement('button', { disabled: this.props.pristine || this.props.submitting, __source: { fileName: _jsxFileName, lineNumber: 52 }, __self: this }, 'Sign Up'),


                _react2.default.createElement(_reactRouterDom.Link, { to: '/', __source: { fileName: _jsxFileName, lineNumber: 55 }, __self: this }, 'Login')));




    }}exports.RegisterForm = RegisterForm;exports.default =


(0, _reduxForm.reduxForm)({
    form: 'signUp',
    onSubmitFail: (errors, dispatch) => {
        return dispatch((0, _reduxForm.focus)('signUp', 'username'));
    } })(
RegisterForm);